- name: Test playbook to setup EVPN Symmetric
  hosts: cumulus
  connection: ansible.netcommon.httpapi
  gather_facts: false
  vars:
    ansible_network_os: nvidia.nvue.httpapi
    ansible_httpapi_port: 8765
    ansible_httpapi_use_ssl: true
    ansible_httpapi_validate_certs: false
  tasks:
    - name: Create new revision
      nvidia.nvue.config:
        state: new
      register: revision
    - name: dump revision
      debug:
        msg: '{{ revision.revid }}'
    - name: Set system settings
      nvidia.nvue.system:
        state: merged
        revid: '{{ revision.revid }}'
        data:
          hostname: {{hostname}}
          timezone: Etc/UTC
          message:
            post_login: >
              #####################################################################################

              #                     You are successfully logged in to:
              {{hostname}}                     #

              #####################################################################################
            pre_login: >
              #####################################################################################

              #  Welcome to NVIDIA Cumulus VX (TM)
              5.5                                            #

              #  NVIDIA Cumulus VX (TM) is a community supported virtual
              appliance designed       #

              #  for experiencing, testing and prototyping NVIDIA Cumulus'"'"'
              latest technology. #

              #  For any questions or technical support, visit our community
              site at:             #

              # 
              https://www.nvidia.com/en-us/support                                            
              #

              #####################################################################################
    - name: Set interface
      nvidia.nvue.interface:
        state: merged
        revid: '{{ revision.revid }}'
        data:
          - id: eth0
            ip:
              address:
                - id: {{eth0_ip}}
              vrf: mgmt
            type: eth
          - id: lo
            ip:
              address:
                - id: '{{loopback_ip}}/32'
            type: loopback
          - id: swp1
            link:
              state:
                - id: up
            type: swp
          - id: swp2
            link:
              state:
                - id: up
            type: swp
          - id: swp3
            link:
              state:
                - id: up
            type: swp
          - id: swp4
            link:
              state:
                - id: up
            type: swp
    - name: Set bridge
      nvidia.nvue.interface: null
      bridge:
        state: merged
        revid: '{{ revision.revid }}'
        data:
          - id: br_default
            type: vlan-aware
            vlan:
              - id: '40'
                vni:
                  - id: '40'

    - name: Set evpn
      nvidia.nvue.evpn:
        state: merged
        revid: '{{ revision.revid }}'
        data:
          enable: 'on'

    - name: Set vxlan
      nvidia.nvue.vxlan:
        state: merged
        revid: '{{ revision.revid }}'
        data:
          enable: 'on'
          source:
            address: {{vxlan_local_loopback}}

    - name: Set router
      nvidia.nvue.router:
        state: merged
        revid: '{{ revision.revid }}'
        data:
          bgp:
            enable: 'on'
            autonomous_system: {{autonomous_system}}
            router_id: {{router_id}}
          vrr:
            enable: 'on'
    
    - name: Set vrf
      nvidia.nvue.vrf:
        state: merged
        revid: '{{ revision.revid }}'
        data:
         
          - id: DB
            evpn:
              enable: 'on'
              vni:
                - id: 3040
            router:
              bgp:
                address_family:
                  ipv4_unicast:
                    enable: 'on'
                    redistribute:
                      connected:
                        enable: 'on'
                    route_export:
                      to_evpn:
                        enable: 'on'
                  l2vpn_evpn:
                    enable: 'on'
                autonomous_system: {{autonomous_system}}
                enable: 'on'
                router_id: {{router_id:}}
          - id: default
            router:
              bgp:
                address_family:
                  ipv4_unicast:
                    enable: 'on'
                    redistribute:
                      connected:
                        enable: 'on'
                  l2vpn_evpn:
                    enable: 'on'
                autonomous_system: {{autonomous_system}}
                enable: 'on'
                router_id: {{router_id}}
                neighbor:
                  - id: swp1
                    peer_group: underlay
                    type: unnumbered
                  - id: swp2
                    peer_group: underlay
                    type: unnumbered
                  - id: swp3
                    peer_group: underlay
                    type: unnumbered
                  - id: swp4
                    peer_group: underlay
                    type: unnumbered
                peer_group:
                  - id: underlay
                    address_family:
                      l2vpn_evpn:
                        enable: 'on'
                    remote_as: external
          - id: mgmt
            router:
              static:
                - id: 0.0.0.0/0
                  address_family: ipv4-unicast
                  via:
                    - id: 172.29.10.1
                      type: ipv4-address
    - name: Set VLAN interfaces
      nvidia.nvue.interface:
        state: merged
        revid: '{{ revision.revid }}'
        data:
          
          - id: vlan40
            ip:
              address:
                - id: 172.29.40.{{vlan_ip_suffix}}/24
              vrr:
                address:
                  - id: 172.29.40.{{vrr_address_suffix}}/24
                state:
                  - id: up
                mac_address: '00:00:00:00:00:{{mac_id_suffix}}'
              vrf: DB
            vlan: 40
            type: svi
          - id: bond1
            bond:
              lacp_bypass: 'on'
              mlag:
                enable: 'on'
                id: 1
              member:
                - id: swp1
            bridge:
              domain:
                - id: br_default
                  access: 40
                  stp:
                    admin_edge: 'on'
                    auto_edge: 'on'
                    bpdu_guard: 'on'
            type: bond
            link:
              mtu: 9000
          - id: bond2
            bond:
              lacp_bypass: 'on'
              mlag:
                enable: 'on'
                id: 2
              member:
                - id: swp2
            bridge:
              domain:
                - id: br_default
                  access: 40
                  stp:
                    admin_edge: 'on'
                    auto_edge: 'on'
                    bpdu_guard: 'on'
            type: bond
            link:
              mtu: 9000
          - id: bond3
            bond:
              lacp_bypass: 'on'
              mlag:
                enable: 'on'
                id: 3
              member:
                - id: swp3
            bridge:
              domain:
                - id: br_default
                  access: 40
                  stp:
                    admin_edge: 'on'
                    auto_edge: 'on'
                    bpdu_guard: 'on'
            type: bond
            link:
              mtu: 9000
    - name: Apply new revision
      nvidia.nvue.config:
        state: apply
        revid: '{{ revision.revid }}'
        force: true
        wait: 10
      register: revision
    - name: dump previous output
      debug:
        msg: '{{ revision }}'
    - name: Get the current config
      nvidia.nvue.api:
        operation: get
      register: output
    - name: Print current config
      ansible.builtin.debug:
        msg: '{{ output }}'